name: Test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-versions: [1.18, 1.17]
        platform: [ubuntu-20.04]
        environment-variables: [build/config/plain.sh, build/config/libpfm4.sh, build/config/libipmctl.sh]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-versions }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run presubmit checks
      run: |
        source ${{ matrix.environment-variables }}
        if [[ "${BUILD_PACKAGES}" != "" ]]; then sudo apt-get update; sudo apt-get install ${BUILD_PACKAGES}; fi
        make -e presubmit
    - name: Run tests
      env:
        GOLANG_VERSION: ${{ matrix.go-versions }}
      run: |
        source ${{ matrix.environment-variables }}
        make test
  test-integration:
    strategy:
      matrix:
        go-versions: [1.18, 1.17]
        platform: [ubuntu-20.04]
        environment-variables: [build/config/plain.sh, build/config/libpfm4.sh, build/config/libipmctl.sh]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run integration tests
      env:
        GOLANG_VERSION: ${{ matrix.go-versions }}
      run: |
        set -ex
        source ${{ matrix.environment-variables }}
        make docker-test-integration
#       skipped        
#     - name: Upload cAdvisor log file
#       uses: actions/upload-artifact@v1
#       if: failure()
#       with:
#         name: cadvisor.log
#         path: ${{ github.workspace }}/go/src/github.com/google/cadvisor/cadvisor.log
  test-integration-s390x:
      runs-on: ubuntu-18.04
      name: Build on s390x
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/google/cadvisor
      - name: Enable running multiple architectures
        run: |
          sudo docker run --rm --privileged linuxkit/binfmt:4ea3b9b0938cbd19834c096aa31ff475cc75d281
      - name: workaround permission issue
        run: uname -i
      - uses: uraimo/run-on-arch-action@v2.1.2
        with:
          arch: s390x
          distro: ubuntu18.04
          run: |
            set -euo pipefail
            apt-get update
            apt-get install -y --no-install-recommends \
            apt-transport-https \
            ca-certificates \
            socat \
            curl \
            gnupg2 \
            software-properties-common \
            lsb-release \
            build-essential \
            git \
            sudo \
            wget
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
            add-apt-repository \
               "deb [arch=s390x] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable"
            apt-get update
            apt-cache madison docker-ce
            cat /usr/sbin/policy-rc.d 
            printf '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d
            cat /usr/sbin/policy-rc.d 
            export RUNLEVEL=1
            apt-get install -y --no-install-recommends docker-ce
            wget -O /tmp/go.tar.gz https://go.dev/dl/go1.18.linux-s390x.tar.gz
            tar -C /usr/local -xzf /tmp/go.tar.gz
            export PATH="$PATH":/usr/local/go/bin
            set -x
            git config --global --add safe.directory /home/runner/work/cadvisor/cadvisor/go/src/github.com/google/cadvisor
            sudo docker ps
            sudo docker images
            sudo docker run -d k8s.gcr.io/pause:3.2
            sudo docker ps
            uname -i
    
